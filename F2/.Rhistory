geom_point2(aes(subset=(node==441)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==441), label = "Alphapapillomaviridae (83)"),  size = 2, hjust = -.1)
# Betapapillomaviridae
t = t %>% collapse(node=774) +
geom_point2(aes(subset=(node==774)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==774), label = "Betapapillomaviridae (55)"),  size = 2, hjust = -.1)
# Gammapapillomaviridae
t = t %>% collapse(node=647) +
geom_point2(aes(subset=(node==647)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==647), label = "Gammapapillomaviridae (87)"),  size = 2, hjust = -.1)
t = t %>% collapse(node=729) +
geom_point2(aes(subset=(node==729)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==729), label = "Gammapapillomaviridae (13)"),  size = 2, hjust = -.1)
# Mupapillomaviridae
t = t %>% collapse(node=638) +
geom_point2(aes(subset=(node==638)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==638), label = "Mupapillomaviridae (3)"),  size = 2, hjust = -.1)
# Upsilonpapillomaviridae
t = t %>% collapse(node=529) +
geom_point2(aes(subset=(node==529)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==529), label = "Upsilonpapillomaviridae (7)"),  size = 2, hjust = -.1)
# Omikronpapillomaviridae
t = t %>% collapse(node=542) +
geom_point2(aes(subset=(node==542)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==542), label = "Omikronpapillomaviridae (5)"),  size = 2, hjust = -.1)
# Dyopipapillomaviridae
t = t %>% collapse(node=540) +
geom_point2(aes(subset=(node==540)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==540), label = "Dyopipapillomaviridae (2)"),  size = 2, hjust = -.1)
# Omegapapillomaviridae
t = t %>% collapse(node=535) +
geom_point2(aes(subset=(node==535)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==535), label = "Omegapapillomaviridae (5)"),  size = 2, hjust = -.1)
# Deltapapillomaviridae
t = t %>% collapse(node=558) +
geom_point2(aes(subset=(node==558)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==558), label = "Deltapapillomaviridae (15)"),  size = 2, hjust = -.1)
t = t %>% collapse(node=575) +
geom_point2(aes(subset=(node==575)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==575), label = "Deltapapillomaviridae (2)"),  size = 2, hjust = -.1)
# Epsilonpapillomaviridae
t = t %>% collapse(node=572) +
geom_point2(aes(subset=(node==572)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==572), label = "Epsilonpapillomaviridae (4)"),  size = 2, hjust = -.1)
# Pipapillomaviridae
t = t %>% collapse(node=748) +
geom_point2(aes(subset=(node==748)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==748), label = "Pipapillomaviridae (8)"), size = 2, hjust = -.1)
# Taupapillomaviridae
t = t %>% collapse(node=757) +
geom_point2(aes(subset=(node==757)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==757), label = "Taupapillomaviridae (13)"), size = 2, hjust = -.1)
# Xipapillomaviridae
t = t %>% collapse(node=829) +
geom_point2(aes(subset=(node==829)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==829), label = "Xipapillomaviridae (15)"), size = 2, hjust = -.1)
# Chipapillomaviridae
t = t %>% collapse(node=587) +
geom_point2(aes(subset=(node==587)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==587), label = "Chipapillomaviridae (13)"), size = 2, hjust = -.1)
# Dyozetapapillomaviridae
t = t %>% collapse(node=860) +
geom_point2(aes(subset=(node==860)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==860), label = "Dyozetapapillomaviridae (2)"), size = 2, hjust = -.1)
# Lambdapapillomaviridae
t = t %>% collapse(node=616) +
geom_point2(aes(subset=(node==616)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==616), label = "Lambdapapillomaviridae (12)"), size = 2, hjust = -.1)
# Etapapillomaviridae
t = t %>% collapse(node=859) +
geom_point2(aes(subset=(node==859)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==859), label = "Etapapillomaviridae (2)"), size = 2, hjust = -.1)
# Treisepsilonpapillomaviridae
t = t %>% collapse(node=857) +
geom_point2(aes(subset=(node==857)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==857), label = "Treisepsilonpapillomaviridae (2)"), size = 2, hjust = -.1)
# Zetapapillomaviridae
t = t %>% collapse(node=581) +
geom_point2(aes(subset=(node==581)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==581), label = "Zetapapillomaviridae (2)"), size = 2, hjust = -.1)
# Dyorhopapillomaviridae
t = t %>% collapse(node=579) +
geom_point2(aes(subset=(node==579)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==579), label = "Dyorhopapillomaviridae (3)"), size = 2, hjust = -.1)
# Dyoiotapapillomaviridae
t = t %>% collapse(node=578) +
geom_point2(aes(subset=(node==578)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==578), label = "Dyoiotapapillomaviridae (3)"), size = 2, hjust = -.1) +
geom_tiplab(aes(subset=(node==133), label = "Dyoiotapapillomaviridae (3)"), size = 2, hjust = -.1)
# Iotapapillomaviridae
t = t %>% collapse(node=583) +
geom_point2(aes(subset=(node==583)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==583), label = "Iotapapillomaviridae (4)"), size = 2, hjust = -.1)
# Dyonupapillomaviridae
t = t %>% collapse(node=599) +
geom_point2(aes(subset=(node==599)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==599), label = "Dyonupapillomaviridae (3)"), size = 2, hjust = -.1)
# Dyokappapapillomaviridae
t = t %>% collapse(node=604) +
geom_point2(aes(subset=(node==604)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==604), label = "Dyokappapapillomaviridae (4)"), size = 2, hjust = -.1) +
geom_tiplab(aes(subset=(node==168), label = "Dyokappapapillomaviridae (1)"), size = 2, hjust = -.1)
# Rhopapillomaviridae
t = t %>% collapse(node=609) +
geom_point2(aes(subset=(node==609)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==609), label = "Rhopapillomaviridae (4)"), size = 2, hjust = -.1)
# Dyoomikronpapillomaviridae
t = t %>% collapse(node=523) +
geom_point2(aes(subset=(node==523)), shape=23, size=1.5) +
geom_tiplab(aes(subset=(node==523), label = "Dyoomikronpapillomaviridae (4)"), size = 2, hjust = -.1)
t2 = t +
theme_tree2(legend.position = c(0.1, 0.8)) +
geom_tiplab(size = 2, align = TRUE) +
geom_treescale(x = 2.3, y = 0, fontsize = 3, width = 0.2) +
xlim(0,4)
t2
pdf('MLtreeR.pdf')
t2
dev.off()
# extract subtrees for tanglegram analysis (Figure2.R)
phylo = as.phylo(t2)
pv.pruned = extract.clade(phylo, 614)
pv.pruned = collapseTree(pv.pruned)
pv.pruned[['tip.label']][2] = 'LrPV1'
pv.full = extract.clade(phylo, 612)
write.tree(pv.pruned, '../shared_data/subtree_pruned.tree')
write.tree(pv.full, '../shared_data/subtree_full.tree')
# build heatmap for clade containing Yang and Yin groups
# distance matrix generated from pairwise L1 sequence alignments
L1 = read.csv('pairwise_matrix.csv', row.names = 1)
mat = as.matrix(L1)
# create heatmap
h = pheatmap(mat, color = viridis(10, begin = 0.15, end = 0.88, direction = 1), cellheight = 12, cellwidth = 12, border_color = 'black',
fontsize_row = 7, fontsize_col = 7)
pdf('L1heatmap.pdf')
h
dev.off()
pv1 = read.tree('../shared_data/subtree_pruned.tree')
pv2 = read.tree('../shared_data/subtree_full.tree')
host1 = read.tree('th1.tree')
host2 = read.tree('th2.tree')
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
host1 = read.tree('th1.tree')
host2 = read.tree('th2.tree')
View(pv.pruned)
HP1 = read.csv('HP-pruned.csv', row.names = 1)
HP2 = read.csv('HP-full.csv', row.names = 1)
pv1
host1
HP1
cophy1 = cophylo(pv1, host1, assoc=HP1, rotate = T)
tangle1 = plot(cophy1)
cophy1 = cophylo(host1, pv1, assoc=HP1, rotate = T)
HP1
# load virus-host association .csv files
HP1 = read.csv('HP-pruned.csv')
HP2 = read.csv('HP-full.csv')
pv1
host1
HP1
cophy1 = cophylo(host1, pv1, assoc=HP1, rotate = T)
cophy1 = cophylo(pv1, host1, assoc=HP1, rotate = T)
tangle1 = plot(cophy1)
cophy1 = cophylo(pv1, host1, assoc=HP2, rotate = T)
tangle1 = plot(cophy1)
cophy2 = cophylo(pv2, host2, assoc=HP2, rotate = T)
tangle2 = plot(cophy2)
pv = read.tree('../shared_data/subtree_full.tree')
host = read.tree('th2.tree')
host
library(ape)
library(ade4)
library(adephylo)
library(treeio)
library(ggtree)
library(phylogram)
library(phytools)
library(data.tree)
library(tidytree)
library(dplyr)
library(paco)
library(ggplot2)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load subtrees generated in 'Figure1.R'
pv = read.tree('../shared_data/subtree_full.tree')
# load host trees created using TimeTree.org
host = read.tree('th2.tree')
# load virus-host association .csv files
HP = read.csv('HP-full.csv')
1
cophy = cophylo(pv, host, assoc=HP, rotate = T)
tangle = plot(cophy)
pdf('tanglegram.pdf')
tangle
dev.off()
library(ape)
library(ade4)
library(adephylo)
library(treeio)
library(ggtree)
library(phylogram)
library(phytools)
library(data.tree)
library(tidytree)
library(dplyr)
library(paco)
library(ggplot2)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load subtrees generated in 'Figure1.R'
pv = read.tree('../shared_data/subtree_full.tree')
# load host trees created using TimeTree.org
host = read.tree('th2.tree')
HP = read.csv('HP-full.csv')
cophy = cophylo(pv, host, assoc=HP, rotate = T)
tangle = plot(cophy)
tangle
plot(cophy)
library(paco)
library(seqinr)
library(ggtree)
library(ggplot2)
library(castor)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
HP1 = read.csv('HP-pruned.csv', row.names = 1)
HP2 = read.csv('HP-full.csv', row.names = 1)
host1 = read.tree('th1.tree')
host2 = read.tree('th2.tree')
pv1 = read.tree('../shared_data/subtree_pruned.tree')
pv2 = read.tree('../shared_data/subtree_full.tree')
dist1 = tree_distance(pv1, host1, metric='WassersteinLaplacianSpectrum', normalize=TRUE, NLeigenvalues = 0)
dist2 = tree_distance(pv2, host2, metric='WassersteinLaplacianSpectrum', normalize=TRUE, NLeigenvalues = 0)
dist1
dist2
htree1<-cophenetic(host1)
vtree1<-cophenetic(pv1)
htree2<-cophenetic(host2)
vtree2<-cophenetic(pv2)
View(htree1)
View(vtree1)
View(vtree2)
library(ape)
library(ade4)
library(adephylo)
library(treeio)
library(ggtree)
library(phylogram)
library(phytools)
library(data.tree)
library(tidytree)
library(dplyr)
library(paco)
library(ggplot2)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load subtrees generated in 'Figure1.R'
pv = read.tree('../shared_data/subtree_full.tree')
# load host trees created using TimeTree.org
host = read.tree('th2.tree')
# load virus-host association .csv files
HP = read.csv('HP-list.csv', header=FALSE)
HP
cophy = cophylo(pv, host, assoc=HP, rotate = T)
tangle = plot(cophy)
plot(cophy)
pdf('tanglegram.pdf')
plot(cophy)
dev.off()
library(ape)
library(ade4)
library(adephylo)
library(treeio)
library(ggtree)
library(phylogram)
library(phytools)
library(data.tree)
library(tidytree)
library(dplyr)
library(paco)
library(ggplot2)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load subtrees generated in 'Figure1.R'
pv = read.tree('../shared_data/subtree_full.tree')
# load host trees created using TimeTree.org
host = read.tree('th2.tree')
HP = read.csv('HP-list.csv', header=FALSE)
cophy = cophylo(pv, host, assoc=HP, rotate = T)
tangle = plot(cophy)
library(paco)
library(seqinr)
library(ggtree)
library(ggplot2)
library(castor)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
HP1 = read.csv('HP-pruned.csv', row.names = 1)
HP2 = read.csv('HP-full.csv', row.names = 1)
host1 = read.tree('th1.tree')
host2 = read.tree('th2.tree')
pv1 = read.tree('../shared_data/subtree_pruned.tree')
pv2 = read.tree('../shared_data/subtree_full.tree')
dist1 = tree_distance(pv1, host1, metric='WassersteinLaplacianSpectrum', normalize=TRUE, NLeigenvalues = 0)
dist2 = tree_distance(pv2, host2, metric='WassersteinLaplacianSpectrum', normalize=TRUE, NLeigenvalues = 0)
dist1
dist2
htree1<-cophenetic(host1)
vtree1<-cophenetic(pv1)
htree2<-cophenetic(host2)
vtree2<-cophenetic(pv2)
D1 <- prepare_paco_data(H=htree1, P=vtree1,HP=HP1)
D1 = add_pcoord(D1,correction = 'lingoes')
D1 = PACo (D1,nperm=1000,seed=12,method='r2', symmetric = FALSE, shuffled = TRUE)
D1 = paco_links(D1)
D1$gof$p
D1$gof$ss
S1 = as.data.frame(D1$shuffled)
q5.1 = quantile(S1[,1],c(0.05))
q95.1 = quantile(S1[,1],c(0.95))
p1 = ggplot(S1, aes(x=S1[,1])) +
geom_density(fill='grey70') +
geom_vline(xintercept = D1$gof$ss, color= 'red') +
geom_vline(xintercept = q5.1, color= 'black') +
geom_vline(xintercept = q95.1, color= 'black') +
xlab('Procrustes sum of squared residuals')
p1
# PACo - full subtree
D2 <- prepare_paco_data(H=htree2, P=vtree2,HP=HP2)
D2 = add_pcoord(D2,correction = 'lingoes')
D2 = PACo (D2,nperm=1000,seed=12,method='r2', symmetric = FALSE, shuffled = TRUE)
D2 = paco_links(D2)
#D
#p-value
D2$gof$p
D2$gof$ss
S2 = as.data.frame(D2$shuffled)
q5.2 = quantile(S2[,1],c(0.05))
q95.2 = quantile(S2[,1],c(0.95))
p2 = ggplot(S2, aes(x=S2[,1])) +
geom_density(fill='grey70') +
geom_vline(xintercept = D2$gof$ss, color= 'red') +
geom_vline(xintercept = q5.2, color= 'black') +
geom_vline(xintercept = q95.2, color= 'black') +
xlab('Procrustes sum of squared residuals')
p2
library(ape)
library(ade4)
library(adephylo)
library(treeio)
library(ggtree)
library(phylogram)
library(phytools)
library(data.tree)
library(tidytree)
library(dplyr)
library(paco)
library(ggplot2)
library(seqinr)
library(castor)
library(ape)
library(ade4)
library(adephylo)
library(treeio)
library(ggtree)
library(phylogram)
library(phytools)
library(data.tree)
library(tidytree)
library(dplyr)
library(paco)
library(ggplot2)
library(seqinr)
library(castor)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load subtrees generated in 'Figure1.R'
pv = read.tree('../shared_data/subtree_full.tree')
# load host trees created using TimeTree.org
host = read.tree('th2.tree')
HP = read.csv('HP-list.csv', header=FALSE)
cophy = cophylo(pv, host, assoc=HP, rotate = T)
tangle = plot(cophy)
HP1 = read.csv('HP-pruned.csv', row.names = 1)
HP2 = read.csv('HP-full.csv', row.names = 1)
host1 = read.tree('th1.tree')
host2 = read.tree('th2.tree')
pv1 = read.tree('../shared_data/subtree_pruned.tree')
pv2 = read.tree('../shared_data/subtree_full.tree')
dist1 = tree_distance(pv1, host1, metric='WassersteinLaplacianSpectrum', normalize=TRUE, NLeigenvalues = 0)
dist2 = tree_distance(pv2, host2, metric='WassersteinLaplacianSpectrum', normalize=TRUE, NLeigenvalues = 0)
dist1
dist2
htree1<-cophenetic(host1)
vtree1<-cophenetic(pv1)
htree2<-cophenetic(host2)
vtree2<-cophenetic(pv2)
D1 <- prepare_paco_data(H=htree1, P=vtree1,HP=HP1)
D1 = add_pcoord(D1,correction = 'lingoes')
D1 = PACo (D1,nperm=1000,seed=12,method='r2', symmetric = FALSE, shuffled = TRUE)
D1 = paco_links(D1)
#D
#p-value
D1$gof$p
D1$gof$ss
S1 = as.data.frame(D1$shuffled)
q5.1 = quantile(S1[,1],c(0.05))
q95.1 = quantile(S1[,1],c(0.95))
p1 = ggplot(S1, aes(x=S1[,1])) +
geom_density(fill='grey70') +
geom_vline(xintercept = D1$gof$ss, color= 'red') +
geom_vline(xintercept = q5.1, color= 'black') +
geom_vline(xintercept = q95.1, color= 'black') +
xlab('Procrustes sum of squared residuals')
p1
D2 <- prepare_paco_data(H=htree2, P=vtree2,HP=HP2)
D2 = add_pcoord(D2,correction = 'lingoes')
D2 = PACo (D2,nperm=1000,seed=12,method='r2', symmetric = FALSE, shuffled = TRUE)
D2 = paco_links(D2)
#D
#p-value
D2$gof$p
D2$gof$ss
S2 = as.data.frame(D2$shuffled)
q5.2 = quantile(S2[,1],c(0.05))
q95.2 = quantile(S2[,1],c(0.95))
p2 = ggplot(S2, aes(x=S2[,1])) +
geom_density(fill='grey70') +
geom_vline(xintercept = D2$gof$ss, color= 'red') +
geom_vline(xintercept = q5.2, color= 'black') +
geom_vline(xintercept = q95.2, color= 'black') +
xlab('Procrustes sum of squared residuals')
p2
library(ape)
library(ade4)
library(adephylo)
library(treeio)
library(ggtree)
library(phylogram)
library(phytools)
library(data.tree)
library(tidytree)
library(dplyr)
library(paco)
library(ggplot2)
library(seqinr)
library(castor)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load subtrees generated in 'Figure1.R'
pv = read.tree('../shared_data/subtree_full.tree')
plot (pv)
# load host trees created using TimeTree.org
host = read.tree('th2.tree')
HP = read.csv('HP-list.csv', header=FALSE)
HP
cophy = cophylo(pv, host, assoc=HP, rotate = T)
tangle = plot(cophy)
plot(cophy)
dev.off()
pdf('tanglegram.pdf')
plot(cophy)
dev.off()
HP1 = read.csv('HP-pruned.csv', row.names = 1)
HP2 = read.csv('HP-full.csv', row.names = 1)
host1 = read.tree('th1.tree')
host2 = read.tree('th2.tree')
pv1 = read.tree('../shared_data/subtree_pruned.tree')
pv2 = read.tree('../shared_data/subtree_full.tree')
dist1 = tree_distance(pv1, host1, metric='WassersteinLaplacianSpectrum', normalize=TRUE, NLeigenvalues = 0)
dist2 = tree_distance(pv2, host2, metric='WassersteinLaplacianSpectrum', normalize=TRUE, NLeigenvalues = 0)
dist1
dist2
htree1<-cophenetic(host1)
vtree1<-cophenetic(pv1)
htree2<-cophenetic(host2)
vtree2<-cophenetic(pv2)
D1 <- prepare_paco_data(H=htree1, P=vtree1,HP=HP1)
D1 = add_pcoord(D1,correction = 'lingoes')
D1 = PACo (D1,nperm=1000,seed=12,method='r2', symmetric = FALSE, shuffled = TRUE)
D1 = paco_links(D1)
#D
#p-value
D1$gof$p
D1$gof$ss
S1 = as.data.frame(D1$shuffled)
q5.1 = quantile(S1[,1],c(0.05))
q95.1 = quantile(S1[,1],c(0.95))
p1 = ggplot(S1, aes(x=S1[,1])) +
geom_density(fill='grey70') +
geom_vline(xintercept = D1$gof$ss, color= 'red') +
geom_vline(xintercept = q5.1, color= 'black') +
geom_vline(xintercept = q95.1, color= 'black') +
xlab('Procrustes sum of squared residuals')
p1
pdf('subset_paco.pdf')
p1
dev.off()
D2 <- prepare_paco_data(H=htree2, P=vtree2,HP=HP2)
D2 = add_pcoord(D2,correction = 'lingoes')
D2 = PACo (D2,nperm=1000,seed=12,method='r2', symmetric = FALSE, shuffled = TRUE)
D2 = paco_links(D2)
#D
#p-value
D2$gof$p
D2$gof$ss
S2 = as.data.frame(D2$shuffled)
q5.2 = quantile(S2[,1],c(0.05))
q95.2 = quantile(S2[,1],c(0.95))
p2 = ggplot(S2, aes(x=S2[,1])) +
geom_density(fill='grey70') +
geom_vline(xintercept = D2$gof$ss, color= 'red') +
geom_vline(xintercept = q5.2, color= 'black') +
geom_vline(xintercept = q95.2, color= 'black') +
xlab('Procrustes sum of squared residuals')
p2
pdf('full_paco.pdf')
p2
dev.off()
