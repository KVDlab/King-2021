# library
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(tidyr)
library(ggtree)
library(phytools)
library(plyr)
library(ggpubr)
#analysis groups
Yang = c("TbraPV3","EsPV1","TbraPV1","TbraPV2","EsPV3","MscPV2")
Yin = c("RfPV1","EhPV1","EdPV1","HPV41")
other  = c("TbelPV1","HPV204","HPV1","HPV63","CcanPV1","OcPV1","SfPV1","TePV1","CPV1","LwiePV1","CcrPV1","FcaPV1","PlpPV1","UuPV1","LrPV1","PcPV1","CPV6","AmPV4","LwPV1","ElPV1","PlPV1")
all = c(Yang,Yin,other)
#data generated from python
d1 = read.csv("../shared_data/2_PaVE.complete-genomes.fas_ratio.csv")  # read csv file
#add group
d1$color <- ifelse(d1$X %in% Yang, 'Yang',
ifelse (d1$X %in% Yin,'Yin',
ifelse (d1$X %in% other, 'other', "NA")))
d1$color <- factor(d1$color,levels = c("Yang", "Yin", "other","NA"))
d1 =(d1 %>%
filter(color != "NA") %>%
select(everything()))
#convert to long format
d2 <- reshape(d1,
direction = "long",
varying = list(names(d1)[2:18]),
v.names = c("proportion"),
timevar = "dinucleotide",
times = c("AA","AC","AG","AT","CA","CC","CG","CT","GA","GC","GG","GT","TA","TC","TG","TT","%GC"))
dotplot <- ggplot(d1, aes(x = CG, y = X.GC, label=X)) +
geom_point(aes(color=color,size = 10)) +
theme_bw()+
theme(axis.text=element_text(size=14),
axis.title=element_text(size=16,face="bold"),
legend.position = "none") +
xlab("CpG observed/expected") +
ylab("GC content") +
geom_smooth(method=lm, se= FALSE, color="black") +
ylim (30,60)
dotplot
#calculate R2 for regression line
dotplot.lm = lm(X.GC ~ CG, data=d1)
summary(dotplot.lm)
d.CG = (d2 %>%
filter(dinucleotide == "CG") %>%
select(X, proportion, color))
d.CG
means <- ddply(d.CG, c("color"), summarise,
mean=mean(proportion))
means.sem <- ddply(d.CG, c("color"), summarise,
mean=mean(proportion), sem=sd(proportion)/sqrt(length(proportion)))
means.sem <- transform(means.sem, lower=mean-sem, upper=mean+sem)
means.barplot <- ggplot(means, aes(x=color, y=mean)) +
geom_bar(stat = "identity", width=0.2) +
geom_errorbar(aes(ymax=upper,
ymin=lower),
position=position_dodge(0.9),
data=means.sem,
width = 0.1)
means.barplot
CG.lm <- lm(proportion ~ color, data = d.CG)
CG.av <- aov(CG.lm)
summary(CG.av)
tukey.test <- TukeyHSD(CG.av)
tuk <- data.frame(tukey.test$color)
stat.test <- tuk["p.adj"]
#tuk["p.adj"]
stat.test$group1 <- levels(d.CG$color)
stat.test$group2 <- levels(d.CG$color)
stat.test
means.barplot <- means.barplot +
stat_pvalue_manual(
stat.test,
y.position = 0.6, step.increase = 0.15,
label = "p.adj"
) +
theme_bw() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=16,face="bold")) +
ylab("CpG observed/expected") +
xlab("")
means.barplot
#tuk["p.adj"]
stat.test$group1 <- levels(d.CG$color)
View(stat.test)
tree = read.tree("../shared_data/subtree_full.tree")  # read tree
pruned.tree<-drop.tip(tree,tree$tip.label[-match(all, tree$tip.label)])
pruned.tree
x <- d.CG$proportion
y <-log(d.CG$proportion)
names(x) <- d.CG$X
names(y) <- d.CG$X
y
plotTree.barplot(pruned.tree,x[pruned.tree$tip.label])
tree$tip.label[-match(all, tree$tip.label)]
tree
plot(tree)
plot(pruned.tree)
d.CG
means <- ddply(d.CG, c("color"), summarise,
mean=mean(proportion))
means.sem <- ddply(d.CG, c("color"), summarise,
mean=mean(proportion), sem=sd(proportion)/sqrt(length(proportion)))
means.sem <- transform(means.sem, lower=mean-sem, upper=mean+sem)
means.barplot <- ggplot(means, aes(x=color, y=mean)) +
geom_bar(stat = "identity", width=0.2) +
geom_errorbar(aes(ymax=upper,
ymin=lower),
position=position_dodge(0.9),
data=means.sem,
width = 0.1)
means.barplot
CG.lm <- lm(proportion ~ color, data = d.CG)
CG.av <- aov(CG.lm)
summary(CG.av)
tukey.test <- TukeyHSD(CG.av)
tuk <- data.frame(tukey.test$color)
stat.test <- tuk["p.adj"]
View(stat.test)
#tuk["p.adj"]
stat.test$group1 <- levels(d.CG$color)
levels(d.CG$color)
View(d.CG)
d.CG
d.CG <-d.CG[!is.na(d.CG)]
CG.lm <- lm(proportion ~ color, data = d.CG)
d.CG = (d2 %>%
filter(dinucleotide == "CG") %>%
select(X, proportion, color))
d.CG
CG.lm <- lm(proportion ~ color, data = d.CG)
d.CG <-d.CG[!is.na(d.CG)]
d.CG = (d2 %>%
filter(dinucleotide == "CG") %>%
select(X, proportion, color))
d.CG
d.CG <- d.CG[!is.na(d.CG$Factor), ]
CG.lm <- lm(proportion ~ color, data = d.CG)
d.CG
d.CG = (d2 %>%
filter(dinucleotide == "CG") %>%
select(X, proportion, color))
d.CG
d.CG
View(d.CG)
d.CG
d.CG$color
d.CG$color  = droplevels(d.CG$color)
d.CG$color
CG.lm <- lm(proportion ~ color, data = d.CG)
CG.av <- aov(CG.lm)
summary(CG.av)
tukey.test <- TukeyHSD(CG.av)
tuk <- data.frame(tukey.test$color)
stat.test <- tuk["p.adj"]
#tuk["p.adj"]
stat.test$group1 <- levels(d.CG$color)
stat.test$group2 <- levels(d.CG$color)
stat.test
means.barplot <- means.barplot +
stat_pvalue_manual(
stat.test,
y.position = 0.6, step.increase = 0.15,
label = "p.adj"
) +
theme_bw() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=16,face="bold")) +
ylab("CpG observed/expected") +
xlab("")
means.barplot
# library
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(tidyr)
library(ggtree)
library(phytools)
library(plyr)
library(ggpubr)
#analysis groups
Yang = c("TbraPV3","EsPV1","TbraPV1","TbraPV2","EsPV3","MscPV2")
Yin = c("RfPV1","EhPV1","EdPV1","HPV41")
other  = c("TbelPV1","HPV204","HPV1","HPV63","CcanPV1","OcPV1","SfPV1","TePV1","CPV1","LwiePV1","CcrPV1","FcaPV1","PlpPV1","UuPV1","LrPV1","PcPV1","CPV6","AmPV4","LwPV1","ElPV1","PlPV1")
all = c(Yang,Yin,other)
#data generated from python
d1 = read.csv("../shared_data/2_PaVE.complete-genomes.fas_ratio.csv")  # read csv file
#add group
d1$color <- ifelse(d1$X %in% Yang, 'Yang',
ifelse (d1$X %in% Yin,'Yin',
ifelse (d1$X %in% other, 'other', "NA")))
d1$color <- factor(d1$color,levels = c("Yang", "Yin", "other","NA"))
d1 =(d1 %>%
filter(color != "NA") %>%
select(everything()))
#convert to long format
d2 <- reshape(d1,
direction = "long",
varying = list(names(d1)[2:18]),
v.names = c("proportion"),
timevar = "dinucleotide",
times = c("AA","AC","AG","AT","CA","CC","CG","CT","GA","GC","GG","GT","TA","TC","TG","TT","%GC"))
dotplot <- ggplot(d1, aes(x = CG, y = X.GC, label=X)) +
geom_point(aes(color=color,size = 10)) +
theme_bw()+
theme(axis.text=element_text(size=14),
axis.title=element_text(size=16,face="bold"),
legend.position = "none") +
xlab("CpG observed/expected") +
ylab("GC content") +
geom_smooth(method=lm, se= FALSE, color="black") +
ylim (30,60)
dotplot
postscript(file="dotplot.ps")
dotplot
dev.off()
#calculate R2 for regression line
dotplot.lm = lm(X.GC ~ CG, data=d1)
summary(dotplot.lm)
d.CG = (d2 %>%
filter(dinucleotide == "CG") %>%
select(X, proportion, color))
d.CG
means <- ddply(d.CG, c("color"), summarise,
mean=mean(proportion))
means.sem <- ddply(d.CG, c("color"), summarise,
mean=mean(proportion), sem=sd(proportion)/sqrt(length(proportion)))
means.sem <- transform(means.sem, lower=mean-sem, upper=mean+sem)
means.barplot <- ggplot(means, aes(x=color, y=mean)) +
geom_bar(stat = "identity", width=0.2) +
geom_errorbar(aes(ymax=upper,
ymin=lower),
position=position_dodge(0.9),
data=means.sem,
width = 0.1)
means.barplot
d.CG$color  = droplevels(d.CG$color)
CG.lm <- lm(proportion ~ color, data = d.CG)
CG.av <- aov(CG.lm)
summary(CG.av)
tukey.test <- TukeyHSD(CG.av)
tuk <- data.frame(tukey.test$color)
stat.test <- tuk["p.adj"]
#tuk["p.adj"]
stat.test$group1 <- levels(d.CG$color)
stat.test$group2 <- levels(d.CG$color)
stat.test
means.barplot <- means.barplot +
stat_pvalue_manual(
stat.test,
y.position = 0.6, step.increase = 0.15,
label = "p.adj"
) +
theme_bw() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=16,face="bold")) +
ylab("CpG observed/expected") +
xlab("")
means.barplot
View(tuk)
View(stat.test)
View(means)
View(d2)
View(d.CG)
tree = read.tree("../shared_data/subtree_full.tree")  # read tree
plot(tree)
pruned.tree<-drop.tip(tree,tree$tip.label[-match(all, tree$tip.label)])
plot(pruned.tree)
x <- d.CG$proportion
y <-log(d.CG$proportion)
names(x) <- d.CG$X
names(y) <- d.CG$X
y
plotTree.barplot(pruned.tree,x[pruned.tree$tip.label])
